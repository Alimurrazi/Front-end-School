<div class="dialog-content-wrapper">
    <mat-toolbar matDialogTitle class="event-toolbar-header m-0 ">
        <div fxFlex fxLayout="row" fxLayoutAlign="space-between center">
            <span class="title dialog-title">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_HEADER_TITLE' | translate }}</span>
            <button class="mat-icon-button white-fg" (click)="dialogRef.close()"
                    aria-label="Close dialog">
                <mat-icon style="padding: 8px;">close</mat-icon>
            </button>
        </div>
    </mat-toolbar>

    <div mat-dialog-content class="m-0" fusePerfectScrollbar style="padding: 0 !important;">
        <form [formGroup]="attendeeForm" novalidate>
            <div formArrayName="attendees">
                <div *ngFor="let attendee of attendeeForm.controls['attendees']['controls']; let i=index; let last=last;" class="p-24" [ngClass]="{'mb-24 border-bottom': !last}" >
                    <div>
                        <span style="font-size: 22px; font-weight: bold;">{{attendeeForm.controls['attendees']['controls'][i].controls.DisplayName.value}}</span>
                    </div>
                    <div [formGroupName]="i">
                        <div fxLayout="row">
                            <div fxFlex="50" style="padding-right: 16px;">
                                <mat-form-field style="width: 100% !important;">
                                    <input matInput [matDatepicker]="BirthDatePicker" placeholder="{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_BIRTH_DATE' | translate }}"
                                           name="BirthDate" [max]="BirthMaxDate"
                                           formControlName="DateOfBirth">
                                    <mat-datepicker-toggle matSuffix [for]="BirthDatePicker"></mat-datepicker-toggle>
                                    <mat-datepicker #BirthDatePicker></mat-datepicker>
                                </mat-form-field>
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.DateOfBirth.errors && (attendeeForm.controls['attendees']['controls'][i].controls.DateOfBirth.dirty || attendeeForm.controls['attendees']['controls'][i].controls.DateOfBirth.touched)" class="error">
                                    <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.DateOfBirth.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_BIRTH_DATE_ERR' | translate }}</div>
                                </div>
                            </div>
                            <div fxFlex="50" style="padding-left: 16px;">
                                <mat-form-field style="width: 100%">
                                    <mat-select required formControlName="LanguageSpeakes" placeholder="{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_PREFERRED_LANG' | translate }}"
                                                style="width: 100%;">
                                        <mat-option *ngFor="let lang of languages" [value]="lang.value">
                                            {{ lang.viewValue }}
                                        </mat-option>
                                    </mat-select>
                                </mat-form-field>
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.errors && (attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.dirty || attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.touched)" class="error">
                                    <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_PREFERRED_LANG_ERR' | translate }}</div>
                                </div>
                            </div>
                        </div>

                        <div fxLayout="column">
                                <label>{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_FOR_HOW_MANY_PPL' | translate }}</label>
                                    <mat-radio-group class="radioGroup" formControlName="CookingForPersonNumber" required>
                                        <mat-radio-button *ngFor="let option of CookingForPersonNumberOptions" [value]="option" [color]="'primary'">{{ option }}</mat-radio-button>
                                    </mat-radio-group>
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.errors && (attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.dirty || attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.touched)" class="error">
                                    <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.LanguageSpeakes.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                                </div>
                        </div>

                        <!-- <div fxLayout="column">
                            <mat-form-field style="width: 100%;">
                                <mat-select required placeholder="{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_FOR_HOW_MANY_PPL' | translate }}" formControlName="CookingForPersonNumber">
                                    <mat-option *ngFor="let option of CookingForPersonNumberOptions" [value]="option">{{option}}</mat-option>
                                </mat-select>
                            </mat-form-field>
                            <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingForPersonNumber.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingForPersonNumber.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingForPersonNumber.touched)" class="error">
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingForPersonNumber.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                            </div>
                        </div> -->

                        <div fxLayout="column">
                                <label>{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_COOK_PER_WEEK' | translate }}</label>
                                    <mat-radio-group class="radioGroup" formControlName="CookingTimesPerWeek" required>
                                        <mat-radio-button *ngFor="let option of CookingTimesPerWeekOptions" [value]="option" [color]="'primary'">{{ option }}</mat-radio-button>
                                    </mat-radio-group>
                                    <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.touched)" class="error">
                                        <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                                    </div>
                        </div>

                        <!-- <div fxLayout="column" >
                            <mat-form-field style="width: 100%;">
                                <mat-select required placeholder="{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_COOK_PER_WEEK' | translate }}" formControlName="CookingTimesPerWeek">
                                    <mat-option *ngFor="let option of CookingTimesPerWeekOptions" [value]="option">{{option}}</mat-option>
                                </mat-select>
                            </mat-form-field>
                            <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.touched)" class="error">
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingTimesPerWeek.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                            </div>
                        </div> -->

                        <div fxLayout="column">
                            <label>{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_IMP_FOR_COOK' | translate }}</label>
                            <section class="cookingImportance-section checkboxGroup">
                                    <div *ngFor="let option of CookingImportanceOptions; let in = index" formArrayName="CookingImportance">
                                    <mat-checkbox [formControlName]="in" [color]="'primary'">{{option.value}}</mat-checkbox>
                                    </div>
                            </section>
                            <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.touched)" class="error">
                                    <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                                    <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.errors.minlength">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_IMP_FOR_COOK_ERR' | translate }}</div>
                            </div>
                        </div>

                        <!-- <div fxLayout="column">
                            <mat-form-field style="width: 100%;">
                                <mat-select required placeholder="{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_IMP_FOR_COOK' | translate }}" multiple formControlName="CookingImportance">
                                    <mat-option *ngFor="let option of CookingImportanceOptions" [value]="option">{{option}}</mat-option>
                                </mat-select>
                            </mat-form-field>
                            <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.touched)" class="error">
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingImportance.errors.minlength">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_IMP_FOR_COOK_ERR' | translate }}</div>
                            </div>
                        </div> -->

                        <div fxLayout="column">
                                <label>{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_KITCHEN_WORK_HR' | translate }}</label>
                                <section class="checkboxGroup" >
                                        <div *ngFor="let option of CookingBotheredOptions; let in = index" formArrayName="CookingBothered">
                                            <mat-checkbox [formControlName]="in" [color]="'primary'">{{option.value}}</mat-checkbox>
                                        </div>
                                </section>
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.touched)" class="error">
                                        <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                                </div>
                        </div>

                        <!-- <div fxLayout="column">
                            <mat-form-field style="width: 100%;">
                                <mat-select required placeholder="{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_KITCHEN_WORK_HR' | translate }}" multiple formControlName="CookingBothered">
                                    <mat-option *ngFor="let option of CookingBotheredOptions" [value]="option">{{option}}</mat-option>
                                </mat-select>
                            </mat-form-field>
                            <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.errors && (attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.dirty || attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.touched)" class="error">
                                <div *ngIf="attendeeForm.controls['attendees']['controls'][i].controls.CookingBothered.errors.required">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_REQ' | translate }}</div>
                            </div>
                        </div> -->
                        <!--<div fxLayout="row" *ngIf="attendee.controls['CookingBothered'].value && attendee.controls['CookingBothered'].value?.indexOf('Others') > -1">-->
                            <!--<mat-form-field style="width: 100%;">-->
                                <!--<input required matInput placeholder="Others" formControlName="CookingBotheredOthers">-->
                            <!--</mat-form-field>-->
                        <!--</div>-->
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div mat-dialog-actions class="m-0 p-16" fxLayout="row" fxLayoutAlign="end center float-sm-right"
         style="border-top: 1px solid #E6E6E6;">
        <button mat-button class="light-green"
                (click)="dialogRef.close()"
                aria-label="Cancel">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_CANCEL_BTN' | translate }}
        </button>
        <button mat-raised-button [color]="'primary'" *ngIf="attendees.length >= 4"
                (click)="savePreferences(false)"
                [disabled]="attendeeForm.invalid"
                aria-label="Save Preferences">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_SAVE_BTN' | translate }}
        </button>
        <button mat-raised-button [color]="'primary'" *ngIf="attendees.length < 4"
                (click)="savePreferences(true)"
                [disabled]="attendeeForm.invalid"
                aria-label="Save Preferences">{{ 'DEMO_REQ_DETAILS_TABS_PARTICIPANT_TAB_PREFERENCES_UPDATE_MODAL_SAVE_AND_MARK_AS_COMPLETE_BTN' | translate }}
        </button>
    </div>
    <mat-progress-bar *ngIf="isLoading" mode="indeterminate"></mat-progress-bar>
</div>
